{"version":3,"sources":["assets/images/bg1.jpg","assets/images/bg2.jpg","assets/images/bg3.jpg","assets/images/bg4.jpg","assets/images/bg5.jpg","assets/images/dice.svg","components/Home.js","components/About.js","components/Navbar.js","actions/user.js","constants/user.js","async_actions/fetchSignup.js","components/Signup.js","async_actions/fetchEditUser.js","components/Private.js","components/Public.js","components/Account.js","components/Group.js","components/Groups.js","async_actions/editGroup.js","actions/group.js","constants/group.js","components/GroupEditForm.js","components/Member.js","async_actions/createInvitation.js","actions/invitation.js","constants/invitation.js","components/InvitationForm.js","components/ManageMembers.js","containers/ManageGroupsContainer.js","containers/GroupContainer.js","async_actions/acceptInvite.js","components/Invitation.js","components/Invitations.js","containers/InvitationsContainer.js","components/Market.js","containers/MarketContainer.js","components/MarketEdit.js","containers/MarketEditContainer.js","async_actions/createGroup.js","components/GroupForm.js","containers/GroupEditContainer.js","async_actions/fetchLogin.js","components/Login.js","async_actions/fetchLogout.js","components/Heading.js","async_actions/fetchCurrentUser.js","async_actions/fetchUsers.js","actions/users.js","constants/users.js","async_actions/fetchGroups.js","actions/groups.js","constants/groups.js","async_actions/fetchInvitations.js","components/Message.js","components/Messages.js","async_actions/createMessage.js","actions/message.js","constants/message.js","components/MessageForm.js","containers/MessagesContainer.js","App.js","serviceWorker.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/usersReducer.js","reducers/userReducer.js","reducers/groupsReducer.js","reducers/loadingReducer.js","reducers/errorReducer.js","reducers/invitationsReducer.js","reducers/index.js","index.js","configureStore.js"],"names":["module","exports","Home","className","id","data-ride","data-target","data-slide-to","src","bg1","alt","bg2","bg3","bg4","bg5","href","role","data-slide","aria-hidden","About","Navbar","useSelector","state","user","useDispatch","useHistory","data-test","exact","to","type","data-toggle","aria-controls","aria-expanded","aria-label","fetchLoginSuccess","payload","fetchLoginFailure","error","URL","process","fetchSignup","params","dispatch","a","fetch","headers","method","body","JSON","stringify","response","json","result","errors","toast","success","position","POSITION","TOP_CENTER","actions","console","log","Signup","props","useState","username","email","password","setUser","loggedIn","history","useEffect","push","handleChange","e","target","name","value","icon","size","onSubmit","preventDefault","placeholder","onChange","required","fetchEditUser","formData","FormData","append","avatar","credentials","Private","showEditForm","setShowEditForm","userForm","setUserForm","handleClick","form","onClick","privateInfo","Public","imagePreview","style","width","height","uploadedAvatar","files","createObjectURL","accept","filename","htmlFor","publicInfo","Account","isFetching","loading","FETCH_EDIT","active","setActive","color","Group","groupId","parseInt","match","groups","group","find","manageLink","pathname","purpose","memberships","length","owner","Groups","map","key","editGroup","user_id","group_id","GroupEditForm","groupForm","setGroupForm","Member","member","createInvitation","InvitationForm","userId","recipient","inviteForm","setInviteForm","ManageMembers","members","showForm","setShowForm","ManageGroupsContainer","GroupContainer","query","setQuery","lowercasedQuery","toLowerCase","filteredGroups","filter","includes","acceptInvite","inviteLink","Accept","Invitation","invitation","from","group_name","invitation_link","Invitations","invitations","InvitationsContainer","Market","boardgame","description","price","MarketContainer","boardgames","users","forEach","flat","getBoardgames","MarketEdit","image","setBoardgame","row","min","step","uploadedImage","MarketEditContainer","createGroup","GroupForm","setGroup","GroupEditContainer","fetchLogin","Login","currentUser","fetchLogout","Heading","open","setOpen","loginNav","dice","faUser","fetchCurrentUser","fetchUsers","fetchGroups","fetchInvitations","Message","message","show","setShow","subject","content","Messages","sentMessages","sent_messages","receivedMessages","received_messages","receivedMessage","sentMessage","createMessage","MessageForm","setMessage","MessagesContainer","library","add","fab","App","FETCH_LOGIN","channel","onReceived","notification","receivedInvitation","messageActions","info","path","component","render","routeProps","Boolean","window","location","hostname","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","logger","store","next","getState","groupEnd","usersReducer","userReducer","updatedSentMessages","updatedReceivedMessages","updatedCreatedGroup","updatedGroups","addedGroups","groupsReducer","require","bindActionCreators","loadingReducer","matches","exec","requestName","requestState","errorReducer","invitationsReducer","rootReducer","combineReducers","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","composeWithDevTools","configureStore","StrictMode","url","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.351d700d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg1.36191bf8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.79935692.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg3.be1635df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg4.62ddb898.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg5.37b17102.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dice.51a9d64a.svg\";","import React from \"react\";\nimport bg1 from \"../assets/images/bg1.jpg\";\nimport bg2 from \"../assets/images/bg2.jpg\";\nimport bg3 from \"../assets/images/bg3.jpg\";\nimport bg4 from \"../assets/images/bg4.jpg\";\nimport bg5 from \"../assets/images/bg5.jpg\";\n\nconst Home = () => {\n  return (\n    <div className=\"container text-center mt-5 home-img\">\n      <div\n        id=\"carouselExampleIndicators\"\n        className=\"carousel slide mt-5\"\n        data-ride=\"carousel\"\n      >\n        <ol className=\"carousel-indicators\">\n          <li\n            data-target=\"#carouselExampleIndicators\"\n            data-slide-to=\"0\"\n            className=\"active\"\n          ></li>\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"3\"></li>\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"4\"></li>\n        </ol>\n        <div className=\"carousel-inner\">\n          <div className=\"carousel-item active\">\n            <img src={bg1} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n          <div className=\"carousel-item\">\n            <img src={bg2} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n          <div className=\"carousel-item\">\n            <img src={bg3} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n          <div className=\"carousel-item\">\n            <img src={bg4} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n          <div className=\"carousel-item\">\n            <img src={bg5} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n        </div>\n        <a\n          className=\"carousel-control-prev\"\n          href=\"#carouselExampleIndicators\"\n          role=\"button\"\n          data-slide=\"prev\"\n        >\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n          <span className=\"sr-only\">Previous</span>\n        </a>\n        <a\n          className=\"carousel-control-next\"\n          href=\"#carouselExampleIndicators\"\n          role=\"button\"\n          data-slide=\"next\"\n        >\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react'\n\nconst About = () => {\n    return (\n        <div className='container my-5 about'>\n            <span>Hi, I'm Rafael Batista and this is my personal dream project. BGMeetups will be an application where you can play boardgames virtually due to the pandemic without needing multiple copies of a game or any other hassle. This app will start out with basic features but will expand over time. The goal is to be able to activte Mecatol Rex virtually Below you will find a list of planned major features/updates.</span>\n\n            <small className='d-block mt-3'>This site uses cookies for authentication and authorization. This is a work in progress so just use a fake email. There is no email system set up yet. No emails will ever be visible on the front end, the back end will handle everything email related.</small>\n\n            <h3 className='mt-5'>Planned Features</h3>\n            <ul className='mt-3 list-group list-group-flush'>\n         \n                <li className='mt-2 list-group-item'>\n                    <h4>Create a Meetup</h4>\n                    <div>This feature will allow a user to create a meetup at a certain date or time. All user's who are a part of that group will receive a notification as well as an option to accept or deny the meetup.</div>\n                </li>\n                <li className='mt-2 list-group-item'>\n                    <h4>Zoom Integration</h4>\n                    <div>Zoom will be integrated for groups to use to play virtually.</div>\n                </li>\n                <li className='mt-2 list-group-item'>\n                    <h4>Email System</h4>\n                    <div>Once the application has enough features to function I will implement an email system with verification, etc.</div>\n                </li>\n                <li className='mt-3 list-group-item'>\n                    <h4>Third Pary Login</h4>\n                    <div className='mt-2'>As of now you can not log into BGMeetups using third parties. The links are there as placeholders.</div>\n                </li>\n                <li className='mt-3 list-group-item'>\n                    <h4>Suggestions / Bug Report</h4>\n                    <div className='mt-2'>I plan on setting up a system to send suggestions and report a bug. Only verified emails will be accepted.</div>\n                </li>\n                <li className='mt-3 list-group-item'>\n                    <h4>Group Privacy, Reputation System, and Friends List</h4>\n                    <div className='mt-2'>You will be able to set a group to Private user's can not request an invite. A user's reputation lowers if they miss a meetup along with other factors. A user's reputation will not change for missing a </div>\n                </li>\n                <li className='mt-3 list-group-item'>\n                    <h4>MarketPlace Functionality</h4>\n                    <div className='mt-2'>I plan on setting up a Math Trade system based on region. Whenever someone puts up a game in your region that you want and you have a game they want, you will be notified via a message.</div>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default About\n","import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink , useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nconst Navbar = () => {\n  const loggedIn = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n\n  return (\n    <div data-test=\"component-navbar\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark\">\n        <NavLink exact className=\"navbar-brand\" to=\"/home\" data-test=\"link-navbar\">\n          BG Meetups\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse mt-1\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/groups\" data-test=\"link-navbar\">\n                Groups\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/market\" data-test=\"link-navbar\">\n                Market\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" to=\"/\" data-test=\"link-navbar\">\n                About\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import * as types from \"../constants/user\";\n\nexport const fetchLoginRequest = () => ({\n  type: types.FETCH_LOGIN_REQUEST,\n});\n\nexport const fetchLoginSuccess = (user) => ({\n  type: types.FETCH_LOGIN_SUCCESS,\n  payload: user,\n});\n\nexport const fetchLoginFailure = (error) => ({\n  type: types.FETCH_LOGIN_FAILURE,\n  payload: error,\n});\n\nexport const fetchSignupRequest = () => ({\n  type: types.FETCH_SIGNUP_REQUEST,\n});\n\nexport const fetchSignupSuccess = (user) => ({\n  type: types.FETCH_SIGNUP_SUCCESS,\n  payload: user,\n});\n\nexport const fetchSignupFailure = (error) => ({\n  type: types.FETCH_SIGNUP_FAILURE,\n  payload: error,\n});\n\nexport const fetchEditRequest = () => ({\n  type: types.FETCH_EDIT_REQUEST,\n});\n\nexport const fetchEditSuccess = (updatedUser) => ({\n  type: types.FETCH_EDIT_SUCCESS,\n  payload: updatedUser,\n});\n\nexport const fetchEditFailure = (error) => ({\n  type: types.FETCH_EDIT_FAILURE,\n  payload: error,\n});\n\nexport const fetchLogoutRequest = () => ({\n  type: types.FETCH_LOGOUT_REQUEST,\n});\n\nexport const fetchLogoutSuccess = () => ({\n  type: types.FETCH_LOGOUT_SUCCESS,\n});\n\nexport const fetchLogoutFailure = (error) => ({\n  type: types.FETCH_LOGOUT_FAILURE,\n  payload: error,\n});\n","export const FETCH_LOGIN_REQUEST = \"FETCH_LOGIN_REQUEST\";\nexport const FETCH_LOGIN_SUCCESS = \"FETCH_LOGIN_SUCCESS\";\nexport const FETCH_LOGIN_FAILURE = \"FETCH_LOGIN_FAILURE\";\nexport const FETCH_SIGNUP_REQUEST = \"FETCH_SIGNUP_REQUEST\";\nexport const FETCH_SIGNUP_SUCCESS = \"FETCH_SIGNUP_SUCCESS\";\nexport const FETCH_SIGNUP_FAILURE = \"FETCH_SIGNUP_FAILURE\";\nexport const FETCH_EDIT_REQUEST = \"FETCH_EDIT_REQUEST\";\nexport const FETCH_EDIT_SUCCESS = \"FETCH_EDIT_SUCCESS\";\nexport const FETCH_EDIT_FAILURE = \"FETCH_EDIT_FAILURE\";\nexport const FETCH_LOGOUT_REQUEST = \"FETCH_LOGOUT_REQUEST\";\nexport const FETCH_LOGOUT_SUCCESS = \"FETCH_LOGOUT_SUCCESS\";\nexport const FETCH_LOGOUT_FAILURE = \"FETCH_LOGOUT_FAILURE\";\n\n","import * as actions from \"../actions/user\";\nimport { toast } from 'react-toastify';\n\nconst URL = `${process.env.REACT_APP_URL}/users`;\n\n// const displayErrors = (errorsArray) => {\n//     errorsArray.forEach(error => {\n//         toast.error(error, {\n//             position: toast.POSITION.TOP_CENTER\n//         });\n//     });\n// };\n\nconst fetchSignup = (params) => {\n    return async (dispatch) => {\n        \n        dispatch(actions.fetchSignupRequest());\n        \n        try {\n            const response = await fetch(URL, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                method: \"POST\",\n                body: JSON.stringify(params)\n            });\n\n            const result = await response.json();\n\n            if(!result.errors) {\n                toast.success(\"Account successfully created\", {position: toast.POSITION.TOP_CENTER});\n                return dispatch(actions.fetchSignupSuccess(result));\n            }\n\n            toast.error(result.error, {\n                position: toast.POSITION.TOP_CENTER\n              });\n\n            dispatch(actions.fetchLoginFailure(result.error));\n        \n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\n\nexport default fetchSignup;","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fetchSignup from \"../async_actions/fetchSignup\";\nimport { NavLink } from 'react-router-dom';\n\nconst Signup = (props) => {\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const loggedIn = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  let { history } = props\n\n  useEffect(() => {\n    if(JSON.stringify(loggedIn) !== '{}') history.push('/');\n  });\n\n  const handleChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    // send e.target.innerText to server for OAuth\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(fetchSignup(user));\n    setUser({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <div className=\"container text-center mt-4 signin\">\n        <h2 data-test=\"heading\">Signup</h2>\n\n        <div className=\"mt-4\">\n          <button\n            className=\" btn text-center\"\n            name=\"facebook\"\n            data-test=\"button-oauth\"\n          >\n            <FontAwesomeIcon\n              icon={[\"fab\", \"facebook\"]}\n              size=\"lg\"\n              className=\"mr-2\"\n            />\n            <span className=\"mr-2\">Facebook</span>\n          </button>\n        </div>\n        <div className=\"my-2\">\n          <button className=\"btn text-center\" data-test=\"button-oauth\">\n            <FontAwesomeIcon\n              icon={[\"fab\", \"twitter\"]}\n              size=\"lg\"\n              className=\"mr-2\"\n            />\n            <span className=\"mr-4\">Twitter</span>\n          </button>\n        </div>\n        <div className=\"mb-3\">\n          <button className=\" btn text-center\" data-test=\"button-oauth\">\n            <FontAwesomeIcon\n              icon={[\"fab\", \"google\"]}\n              size=\"lg\"\n              className=\"mr-2\"\n            />\n            <span className=\"mr-4\">Google</span>\n          </button>\n        </div>\n        <small>Create an account using your email</small>\n        <div className=\"d-flex justify-content-center mt-2\">\n          <form onSubmit={handleSubmit} data-test=\"form-signup\">\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"username\"\n                onChange={handleChange}\n                value={user.username}\n                required\n              />\n\n              <input\n                className=\"form-control  mt-2\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"email\"\n                onChange={handleChange}\n                value={user.email}\n                required\n              />\n              <input\n                className=\"form-control  mt-2\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                onChange={handleChange}\n                value={user.password}\n                required\n              />\n              <button className=\"btn mt-2\" type=\"submit\">\n                Create Account\n              </button>\n\n              <small className=\"d-block mt-1\">\n                Already have an account?{\" \"}\n                <NavLink to=\"/login\" data-test=\"link\" className=\"d-block\">\n                  Login\n                </NavLink>\n              </small>\n            </div>\n          </form>\n        </div>\n      </div>\n  );\n};\n\nexport default Signup;\n","import * as actions from \"../actions/user\";\nimport { toast } from 'react-toastify';\n\nconst URL = `${process.env.REACT_APP_URL}/users`;\n\n// const displayErrors = (errorsArray) => {\n//     errorsArray.forEach(error => {\n//         toast.error(error, {\n//             position: toast.POSITION.TOP_CENTER\n//         });\n//     });\n// };\n\nconst fetchEditUser = (params) => {\n    return async (dispatch) => {\n\n        dispatch(actions.fetchEditRequest());\n\n        try {\n            let formData = new FormData();\n            formData.append('id', params.id)\n            if(params.avatar) formData.append('avatar', params.avatar);\n            if(params.username) formData.append('username', params.username);\n            if(params.email) formData.append('email', params.email);\n            if(params.password) formData.append('password', params.password);\n            \n            const response = await fetch(`${URL}/${params.id}`, {\n                credentials: \"include\",\n                // headers: {\n                // \"Content-Type\": \"application/json\",\n                // \"Accept\": \"application/json\",\n                // },\n                method: \"PATCH\",\n                body: formData//JSON.stringify(params),\n            });\n\n            const result = await response.json();\n\n            if(!result.error) {\n                toast.success(\"Edit Successful\", {position: toast.POSITION.TOP_CENTER});\n                dispatch(actions.fetchEditSuccess(result));\n            }\n\n            toast.error(result.error, {\n                position: toast.POSITION.TOP_CENTER\n            });\n\n            dispatch(actions.fetchEditFailure(result.error));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport default fetchEditUser;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport fetchEditUser from \"../async_actions/fetchEditUser.js\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Private = (props) => {\n  const { history, user } = props;\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [userForm, setUserForm] = useState({\n    email: \"\",\n    password: \"\",\n    id: user.id,\n  });\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    setShowEditForm(!showEditForm);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(fetchEditUser(userForm));\n    setUserForm({ ...userForm, email: \"\", password: \"\" });\n    setShowEditForm(!showEditForm);\n  };\n\n  const handleChange = (e) => {\n    setUserForm({\n      ...userForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const form = (\n    <form className=\"mt-4 mx-lg-auto ml-sm-4\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"d-block my-2\">Email Address</label>\n        <input\n          name=\"email\"\n          onChange={handleChange}\n          type=\"email\"\n          placeholder={user.email}\n          value={userForm.email}\n        />\n        <label className=\"d-block my-2\">Password</label>\n        <input\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          placeholder={\"*******\"}\n          value={userForm.password}\n        />\n        <div>\n          <button\n            className=\"d-inline mx-2 mt-2 border-0 bg-transparent\"\n            type=\"submit\"\n          >\n            Save\n          </button>\n          <button\n            className=\"d-inline border-0 bg-transparent\"\n            onClick={handleClick}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n\n  const privateInfo = (\n    <div>\n      <div className=\"mt-4\">Email Address</div>\n      <div className=\"mt-2\">{user.email}</div>\n      <div className=\"mt-2\">Password</div>\n      <div className=\"mt-2\">**********</div>\n      <button className=\"pointer border-0 bg-transparent\" onClick={handleClick}>\n        Edit\n      </button>\n    </div>\n  );\n\n  return (\n    <div>\n      <span className=\"d-block\">\n        This is your account information. Only visible to you.\n      </span>\n      <span className=\"d-block\">\n        Note: Changes to your email and password will change the information you\n        use to login\n      </span>\n      {showEditForm ? form : privateInfo}\n    </div>\n  );\n};\n\nexport default Private;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchEditUser from '../async_actions/fetchEditUser.js';  \n\nconst Public = (props) => {\n    const {history, user} = props\n    const [showEditForm, setShowEditForm] = useState(false);\n    const [userForm, setUserForm] = useState({username: '', imagePreview: '', id: user.id, avatar: null});\n   // const [avatar, setAvatar] = useState(null)\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        setShowEditForm(!showEditForm)\n    };\n\n    const handleChange = (e) => {\n        setUserForm({\n            ...userForm,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleImageUpload = (e) => {\n        const uploadedAvatar = e.target.files[0];\n        // setAvatar(uploadedAvatar);\n         setUserForm({...userForm, imagePreview: URL.createObjectURL(uploadedAvatar), avatar: uploadedAvatar});\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(fetchEditUser(userForm));\n        setUserForm({...userForm, username: '', imagePreview: '', avatar: null}); \n      //  setAvatar(null);\n        setShowEditForm(!showEditForm)\n\n        /**\n           formData.append('title', this.state.title);\n    formData.append('body', this.state.body);\n    formData.append('featured_image', this.state.featured_image);\n         */\n    };\n\n    const form = <form onSubmit={handleSubmit}>\n    <div className='form-group'>\n        <div>\n            <img src={`${process.env.REACT_APP_URL}/${user.avatar}`} alt=\"avatar\" style={{width:'128px', height:'128px'}} className='mb-3' />\n        </div>\n        <div>\n            <input name='avatar' onChange={handleImageUpload} type='file' className='img-form' accept=\"image/png, image/jpeg\" filename={userForm.username}/>\n            <small className='d-block mt-2'>JPG or PNG only. 1 MB max.</small>\n            <img src={userForm.imagePreview} style={{width:'128px', height:'128px'}} />\n        </div>\n        <div>\n            <label htmlFor='username' className='d-block my-2'>Username</label>\n            <input name='username' onChange={handleChange} type='text' placeholder={user.username} value={userForm.username} />\n        </div>\n        <div>\n          <button className=' d-inline mx-2 mt-2 border-0 bg-transparent' type='submit'>Save</button>\n          <button className=' d-inline border-0 bg-transparent' onClick={handleClick}>Cancel</button>\n        </div>\n    </div>\n</form>\n\n    const publicInfo = <div>\n        <div>\n          <img src={`${process.env.REACT_APP_URL}/${user.avatar}`} alt=\"avatar\" style={{width:'128px', height:'128px'}} className='mb-3'/>\n        </div>\n       <div>\n        <span className='d-block'>Username</span>\n          <span className='mt-1'>{user.username}</span>\n        </div>\n        <button className='border-0 bg-transparent mt-1' onClick={handleClick}>Edit</button>\n    </div>\n\n    return (\n        <div >\n          <span className='d-block mb-3'>Profile Avatar</span>\n          {showEditForm ? form : publicInfo}\n        </div>\n    )\n}\n\nexport default Public\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Private from \"./Private\";\nimport Public from \"./Public\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\nconst Account = (props) => {\n  const user = useSelector((state) => state.user);\n  const isFetching = useSelector((state) => state.loading.FETCH_EDIT);\n  const [active, setActive] = useState(true);\n    \n  useEffect(() => {\n    if (JSON.stringify(user) === \"{}\") props.history.push(\"/login\");\n  });\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  return (\n    <div className=\"container text-center mt-5\">\n      {isFetching ? (\n        <div className=\"spinner\">\n          <PacmanLoader color={\"#7d3cff\"} />\n        </div>\n      ) : null}\n      <div className=\"heading\">\n        <h2 className=\"d-block my-3\">Account Management</h2>\n        <span>Update and manage your BGMeetups account</span>\n      </div>\n\n      <ul className=\"nav justify-content-center my-4\">\n        <li className=\"nav-item\">\n          <div\n            className={`nav-link pointer ${active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            Account\n          </div>\n        </li>\n        <li className=\"nav-item\">\n          <span\n            className={`nav-link pointer ${!active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            Public Profile\n          </span>\n        </li>\n      </ul>\n\n      {active ? (\n        <Private user={user} history={props.history} />\n      ) : (\n        <Public user={user} />\n      )}\n    </div>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nconst Group = (props) => {\n    const groupId = parseInt(props.match.params.id);\n    const groups = useSelector(state => state.groups) || [];\n    console.log(groups)\n    const group = groups.find((group) => group.id === groupId) || {};\n    const user = useSelector(state => state.user);\n    const manageLink = <NavLink to={{pathname: `/groups/${group.id}/edit`}}>Manage</NavLink>\n\n    return (\n        <div className='container mt-5 text-center'>\n            <div>\n                Name: {group.name}\n            </div>\n            <div>\n                Purpose: {group.purpose}\n            </div>\n            <div>\n                Members: {group.memberships ? group.memberships.length : 0}\n            </div>\n            {\n                group.owner === user.username ? manageLink : null\n            }\n        </div>\n    )\n}\n\nexport default Group\n","import React from \"react\";\nimport Group from \"../components/Group\";\nimport { NavLink } from 'react-router-dom';\n\nconst Groups = (props) => {\n  let {groups} = props;\n  groups = !!groups ? groups : []\n  return (\n    <div className='container text-center '>\n      {\n      groups.map((group) => <div key={group.id}><NavLink exact to={`/groups/${group.id}`} data-test=\"link-navbar\" className='d-block mt-3'>{group.name} </NavLink></div>)\n      }\n    </div>\n \n  );\n};\n\nexport default Groups;\n","import * as actions from \"../actions/group\";\nimport { toast } from 'react-toastify';\n\n\nconst editGroup = (params) => {\n    return async (dispatch) => {\n        try {\n            const URL = `${process.env.REACT_APP_URL}/users/${params.user_id}/groups/${params.group_id}`;\n            const response = await fetch(URL, {\n                credentials: 'include',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                },\n                method: 'PATCH',\n                body: JSON.stringify(params),\n\n            });\n\n            const result = await response.json();\n            if (!result.error) {\n                toast.success(\"Group updated succesfully\", {position: toast.POSITION.TOP_CENTER});\n                return dispatch(actions.editGroupSuccess(result));\n            }\n\n            dispatch(actions.editGroupFailure(result.error));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport default editGroup;","import * as types from \"../constants/group\";\n\nexport const createGroupRequest = () => ({\n  type: types.CREATE_GROUP_REQUEST,\n});\n\nexport const createGroupSuccess = (group) => ({\n  type: types.CREATE_GROUP_SUCCESS,\n  payload: group,\n});\n\nexport const createGroupFailure = (error) => ({\n  type: types.CREATE_GROUP_FAILURE,\n  payload: error,\n});\n\nexport const editGroupRequest = () => ({\n  type: types.EDIT_GROUP_REQUEST,\n});\n\nexport const editGroupSuccess = (group) => ({\n  type: types.EDIT_GROUP_SUCCESS,\n  payload: group,\n});\n\nexport const editGroupFailure = (error) => ({\n  type: types.EDIT_GROUP_FAILURE,\n  payload: error,\n});\n\n\n","export const CREATE_GROUP_REQUEST = \"CREATE_GROUP_REQUEST\";\nexport const CREATE_GROUP_SUCCESS = \"CREATE_GROUP_SUCCESS\";\nexport const CREATE_GROUP_FAILURE = \"CREATE_GROUP_FAILURE\";\nexport const EDIT_GROUP_SUCCESS = \"EDIT_GROUP_SUCCESS\";\nexport const EDIT_GROUP_FAILURE = \"EDIT_GROUP_FAILURE\";\nexport const EDIT_GROUP_REQUEST = \"EDIT_GROUP_REQUEST\";\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport editGroup from \"../async_actions/editGroup\";\n\nconst GroupEditForm = (props) => {\n    const { group, history } = props;\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.user)\n    const [groupForm, setGroupForm] = useState({\n        name: \"\",\n        purpose: \"\"\n    });\n\n    const handleChange = (e) => {\n        setGroupForm({\n            ...groupForm,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const params = {group: groupForm, user_id: user.id, group_id: group.id}\n        dispatch(editGroup(params));\n        history.push('/my-groups');\n    };\n\n\n    return (\n        <form className=\"mt-4 mx-lg-auto ml-sm-4 mt-5\" onSubmit={handleSubmit}>\n            <div className=\"form-group text-center\">\n                <label className=\"d-block my-2\">Name</label>\n                <input\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    value={groupForm.name}\n                    placeholder={group.name}\n                />\n                <label className=\"d-block my-2\">Purpose</label>\n                <input\n                    name=\"purpose\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    value={groupForm.purpose}\n                    placeholder={group.purpose}\n                />\n\n                <div>\n                    <button\n                        className=\"d-inline mx-2 mt-2 border-0 bg-transparent\"\n                        type=\"submit\"\n                    >\n                        Update\n            </button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default GroupEditForm\n","import React from 'react'\n\nconst Member = (props) => {\n    const { member } = props;\n    return (\n        <div className='mt-3'>\n            <span>{member}</span>\n        </div>\n    )\n}\n\nexport default Member\n","import * as actions from \"../actions/invitation\";\nimport { toast } from \"react-toastify\";\n\n\nconst createInvitation = (params) => {\n  return async (dispatch) => {\n    const URL = `${process.env.REACT_APP_URL}/invitations`;\n    dispatch(actions.sentInvitationRequest());\n    try {\n      const response = await fetch(URL,{\n        credentials: \"include\",\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        }, \n        body: JSON.stringify(params)\n      });\n        \n      const result = await response.json();\n      console.log(result)\n      if(!result.error) {\n       return toast.success(\"Invitation Sent\", {position: toast.POSITION.TOP_CENTER});\n       // return dispatch(actions.sentMessageSuccess(result));\n      }\n\n      dispatch(actions.sentInvitationFailure(result.error))\n      toast.error(result.error, {position: toast.POSITION.TOP_CENTER});\n    } catch (error) {\n        console.log(error);\n    }\n  }\n \n    \n}\n\n  export default createInvitation;","import * as types from '../constants/invitation';\n\nexport const sentInvitationRequest = () => ({\n    type: types.SENT_INVITATION_REQUEST, \n})\n\nexport const receivedInvitationSuccess = (invitation) => ({\n    type: types.RECEIVED_INVITATION_SUCCESS, \n    payload: invitation\n});\n\nexport const sentInvitationFailure = (error) => ({\n    type: types.SENT_INVITATION_REQUEST, \n    payload: error\n});\n\nexport const fetchInvitationsRequest = () => ({\n    type: types.FETCH_INVITATIONS_REQUEST\n});\n\nexport const fetchInvitationsSuccess = (invitations) => ({\n    type: types.FETCH_INVITATIONS_SUCCESS,\n    payload: invitations\n});\n\nexport const fetchInvitationsFailure = (error) => ({\n    type: types.FETCH_INVITATIONS_FAILURE, \n    payload: error\n});\n\nexport const acceptInvitationRequest = () => ({\n    type: types.ACCEPT_INVITATION_REQUEST\n})\n\nexport const acceptInvitationSuccess = (invitation) => ({\n    type: types.ACCEPT_INVITATION_SUCCESS,\n    payload: invitation\n})\n\nexport const acceptInvitationFailure = (error) => ({\n    type: types.ACCEPT_INVITATION_FAILURE, \n    payload: error\n})","export const SENT_INVITATION_REQUEST = \"RECEIVED_INVITATION_REQUEST\";\nexport const SENT_INVITATION_FAILURE = \"RECEIVED_INVITATION_FAILURE\";\nexport const RECEIVED_INVITATION_SUCCESS = \"RECEIVED_INVITATION_SUCCESS\";\nexport const FETCH_INVITATIONS_REQUEST = \"FETCH_INVITATIONS_REQUEST\";\nexport const FETCH_INVITATIONS_SUCCESS = \"FETCH_INVITATIONS_SUCCESS\";\nexport const FETCH_INVITATIONS_FAILURE = \"FETCH_INVITATIONS_FAILURE\";\nexport const ACCEPT_INVITATION_REQUEST = \"ACCEPT_INVITATION_REQUEST\";\nexport const ACCEPT_INVITATION_SUCCESS = \"ACCEPT_INVITATION_SUCCESS\";\nexport const ACCEPT_INVITATION_FAILURE = \"ACCEPT_INVITATION_FAILURE\";","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport createInvitation from '../async_actions/createInvitation';\n\nconst InvitationForm = (props) => {\n    const { userId, groupId, history } = props;\n\n    const [inviteForm, setInviteForm] = useState({recipient: '', user_id: userId, group_id: groupId});\n\n    const dispatch = useDispatch();\n    \n    const handleChange = (e) => {\n        setInviteForm({...inviteForm, [e.target.name]: e.target.value});\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(createInvitation(inviteForm));\n        setInviteForm({...inviteForm, recipient: ''})\n    }\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        console.log('Cancel')\n    };\n\n    return (\n        <form className='form-group mt-4 mx-lg-auto ml-sm-4' onSubmit={handleSubmit}>\n            <label className=\"d-block my-2\">Username</label>\n            <input\n                name=\"recipient\"\n                type=\"text\"\n                onChange={handleChange}\n                value={inviteForm.recipient}\n            />\n            <div className='mt-2'>\n              <button className='mr-2'>Invite</button>\n              <button onClick={handleCancel} >Cancel</button>\n            </div>\n        </form>\n\n    )\n}\n\nexport default InvitationForm\n","import React, { useState } from 'react';\nimport Member from '../components/Member';\nimport InvitationForm from '../components/InvitationForm';\n\nconst ManageMembers = (props) => {\n    let { members, history, userId, groupId } = props;\n    members = !!members ? members : []\n    const [showForm, setShowForm] = useState(false);\n\n    const handleClick = () => {\n        setShowForm(!showForm)\n    };\n\n    return (\n        <div className='container'>\n            <span className='pointer my-4' onClick={handleClick}>Invite to Group</span>\n            {showForm ? <InvitationForm history={history} userId={userId} groupId={groupId}/> : members.map(member => <Member member={member} />)}\n        </div>\n    ) \n}\n\nexport default ManageMembers\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport GroupEditForm from \"../components/GroupEditForm\";\nimport ManageMembers from \"../components/ManageMembers\";\n\nconst ManageGroupsContainer = (props) => {\n    const { history }  = props;\n    const user = useSelector((state) => state.user);\n    const [active, setActive] = useState(true);\n    const id = parseInt(props.match.params.id)\n    const groups = user.groups || [];\n    const group = groups.find((group) => group.id === id) || {};\n      \n    useEffect(() => {\n     // if (JSON.stringify(user) === \"{}\") props.history.push(\"/login\");\n    });\n  \n    const handleClick = () => {\n      setActive(!active);\n    };\n  \n    return (\n      <div className=\"container text-center mt-5\">\n        <div className=\"heading\">\n          <h2 className=\"d-block my-3\">Group Management</h2>\n          <span>Update your group info and manage members</span>\n        </div>\n  \n        <ul className=\"nav justify-content-center my-4\">\n          <li className=\"nav-item\">\n            <div\n              className={`nav-link pointer ${active ? \"active\" : \"\"}`}\n              onClick={handleClick}\n            >\n              Manage Members\n            </div>\n          </li>\n          <li className=\"nav-item\">\n            <span\n              className={`nav-link pointer ${!active ? \"active\" : \"\"}`}\n              onClick={handleClick}\n            >\n              Edit Group Info\n            </span>\n          </li>\n        </ul>\n  \n        {active ? (\n         <ManageMembers members={group.memberships} history={history} userId={user.id} groupId={group.id}/>\n        ) : (\n         <GroupEditForm group={group} history={history}/>\n        )}\n      </div>\n    );\n}\n\nexport default ManageGroupsContainer\n","import React, { useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Groups from \"../components/Groups\";\n\nconst GroupContainer = () => {    \n  const [query, setQuery] = useState('');\n  const lowercasedQuery = query.toLowerCase();\n  const groups = useSelector(state => state.groups);\n  const handleChange = (e) => {\n      setQuery(e.target.value);\n  }\n  const filteredGroups = groups.filter((group) => { \n    if (group.name.toLowerCase().includes(lowercasedQuery)) {\n      return group;\n    }\n  });\n\n  return (\n    <div className='container mt-5 text-center'>\n        <div className='d-inline'> \n            <form className=' d-inline'>\n                <input type='text' name='query' placeholder=\"Search for groups by name.\" onChange={handleChange} className='pl-2'/>\n                {/* <span className='input-group-addon'>\n                    <FontAwesomeIcon\n                    icon={faSearch}\n                    size=\"lg\"\n                    className=''\n                    />\n                </span> */}\n            </form>\n        </div>\n        <Groups groups={filteredGroups} />\n    </div>\n  );\n};\n\nexport default GroupContainer;\n","import * as actions from \"../actions/invitation\";\nimport { toast } from \"react-toastify\";\n\nconst acceptInvite = (id, inviteLink) => {\n    return async (dispatch) => {\n        try {\n            dispatch(actions.acceptInvitationRequest())\n            const response = await fetch(inviteLink, {\n                credentials: \"include\",\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\",\n                },\n            })\n\n            const result = await response.json();\n\n            if(!result.error) {\n                toast.success(\"Accepted Invite\", {\n                    position: toast.POSITION.TOP_CENTER,\n                  });\n                return dispatch(actions.acceptInvitationSuccess(result))\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport default acceptInvite;","import React from 'react';\nimport acceptInvite from '../async_actions/acceptInvite';\nimport { useDispatch } from 'react-redux';\n\nconst Invitation = (props) => {\n    const { invitation, history } = props;\n    const { id, from, group_name, invitation_link } = invitation;\n    const inviteLink = `${process.env.REACT_APP_URL}/enc/${id}/${invitation_link}`;\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(acceptInvite(id, inviteLink));\n        history.push('/invites')\n    }\n\n    return (\n        <div className='container mt-5'>\n            <span className='d-block'>{from} has invited you to join the group {group_name}</span>\n            <span className='d-block mt-2'>Click the link below or copy and paste the link into the address bar</span>\n            <span className='d-block pointer mt-2 invite-link' onClick={handleClick}>{inviteLink}</span>\n        </div>\n    )\n}\n\nexport default Invitation\n","import React from 'react';\nimport Invitation from './Invitation';\n\nconst Invitations = (props) => {\n    const { invitations, history } = props\n    return (\n        <div>\n            {invitations.map((invitation) => <Invitation invitation={invitation} history={history}/>)}\n        </div>\n    )\n}\n\nexport default Invitations\n","import React from 'react';\nimport Invitations from '../components/Invitations';\nimport { useSelector } from 'react-redux';\n\nconst InvitationsContainer = (props) => {\n    const { history } = props;\n    const invitations = useSelector(state => state.invitations)\n    return (\n        <div>\n            <Invitations invitations={invitations} history={history}/>\n        </div>\n    )\n}\n\nexport default InvitationsContainer\n","import React from \"react\";\n\nconst Market = (props) => {\n  const {boardgame} = props;\n  return( \n    <div className='container text-center my-4'>\n      <div className=''>{boardgame.name}</div>\n      <div>{boardgame.description}</div>\n      <div>{boardgame.price}</div>\n      <button className='btn'>Contact Seller</button>\n    </div>\n  )};\n\nexport default Market;\n","import React, { useEffect } from \"react\";\nimport Market from \"../components/Market\";\nimport { useSelector } from \"react-redux\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\nconst MarketContainer = () => {\n  const users = useSelector((state) => state.users);\n\n  const getBoardgames = (users) => {\n    const boardgames = [];\n    try {\n      users.forEach((user) => {\n        if (!!user.boardgames.length) boardgames.push(user.boardgames);\n      });\n      return boardgames.flat(1);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const boardgames = getBoardgames(users);\n\n  return (\n    <div>\n      {boardgames.length ? (\n        boardgames.map((boardgame) => <Market boardgame={boardgame} />)\n      ) : (\n        <div className=\" mt-5 text-center\">It's Quiet... Too Quiet...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MarketContainer;\n","import React, { useState, useEffect } from \"react\";\n\nconst MarketEdit = (props) => {\n  const [boardgame, setBoardgame] = useState({\n    name: \"\",\n    description: \"\",\n    price: 0.0,\n    image: null,\n    imagePreview: null,\n  });\n\n  const handleChange = (e) => {\n    setBoardgame({\n      ...boardgame,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleImageUpload = (e) => {\n    const uploadedImage = e.target.files[0];\n    setBoardgame({\n      ...boardgame,\n      imagePreview: URL.createObjectURL(uploadedImage),\n      image: uploadedImage,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Submit Boardgame to marketplace\");\n    console.log(boardgame);\n  };\n\n  return (\n    <form className=\"mt-4 mx-lg-auto ml-sm-4\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"d-block my-2\">Name</label>\n        <input name=\"name\" type=\"text\" onChange={handleChange} />\n        <label className=\"d-block my-2\">Description</label>\n        <textarea\n          name=\"description\"\n          type=\"text\"\n          row=\"3\"\n          className=\"description\"\n          onChange={handleChange}\n        />\n        <label className=\"d-block my-2\">Price</label>\n        <input\n          name=\"price\"\n          type=\"number\"\n          min=\"1\"\n          step=\"any\"\n          onChange={handleChange}\n        />\n        <div className=\"mt-3\">\n          <input\n            name=\"test\"\n            type=\"file\"\n            className=\"img-form\"\n            accept=\"image/png, image/jpeg\"\n            filename={boardgame.name}\n            onChange={handleImageUpload}\n            // multiple\n          />\n          <small className=\"d-block my-2\">JPG or PNG only. 1 MB max.</small>\n          <img\n            src={boardgame.imagePreview}\n            style={{ width: \"128px\", height: \"128px\" }}\n          />\n        </div>\n\n        <div>\n          <button\n            className=\"d-inline mx-2 mt-2 border-0 bg-transparent\"\n            type=\"submit\"\n          >\n            Save\n          </button>\n          <button className=\"d-inline border-0 bg-transparent\">Cancel</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default MarketEdit;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport MarketEdit from \"../components/MarketEdit\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nconst MarketEditContainer = (props) => {\n  const [active, setActive] = useState(true);\n  const { history } = props;\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (JSON.stringify(user) === \"{}\") {\n      history.push(\"/account\");\n      toast.error(\"You Shall Not Pass!\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n  });\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  return (\n    <div className=\"container text-center mt-5\">\n      <div className=\"heading\">\n        <h2 className=\"d-block my-3\">My Marketplace</h2>\n        <span>\n          View and edit your posts in the marketplace or create a new post to\n          sell a game\n        </span>\n      </div>\n      <ul className=\"nav justify-content-center my-4\">\n        <li className=\"nav-item\">\n          <div\n            className={`nav-link pointer ${active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            My Market Games\n          </div>\n        </li>\n        <li className=\"nav-item\">\n          <span\n            className={`nav-link pointer ${!active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            Sell A Game\n          </span>\n        </li>\n      </ul>\n      {active ? null : <MarketEdit />}\n    </div>\n  );\n};\n\nexport default MarketEditContainer;\n","import * as actions from \"../actions/group\";\nimport { toast } from \"react-toastify\";\n\nconst createGroup = (params, userId) => {\n  return async (dispatch) => {\n    try {\n      dispatch(actions.createGroupRequest());\n      const URL = `${process.env.REACT_APP_URL}/users/${userId}/groups`;\n      const response = await fetch(URL, {\n        credentials: \"include\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n        },\n        body: JSON.stringify(params),\n      });\n\n      const result = await response.json();\n      if (!result.error) {\n        toast.success(\"Group Created\", {\n          position: toast.POSITION.TOP_CENTER,\n        });\n\n        return dispatch(actions.createGroupSuccess(result));\n      }\n\n      dispatch(actions.createGroupFailure(result.error));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport default createGroup;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport createGroup from \"../async_actions/createGroup\";\n\n\nconst GroupForm = (props) => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const [group, setGroup] = useState({\n    name: \"\",\n    purpose: \"\",\n  });\n\n  const handleChange = (e) => {\n    setGroup({\n      ...group,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(createGroup(group, user.id));\n    setGroup({ name: \"\", purpose: \"\" });\n  };\n\n  const handleClick = (e) => {\n    setGroup({ name: \"\", purpose: \"\" });\n  };\n\n  return (\n    <form className=\"mt-4 mx-lg-auto ml-sm-4\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"d-block my-2\">Name</label>\n        <input\n          name=\"name\"\n          type=\"text\"\n          onChange={handleChange}\n          value={group.name}\n        />\n        <label className=\"d-block my-2\">Purpose</label>\n        <input\n          name=\"purpose\"\n          type=\"text\"\n          onChange={handleChange}\n          value={group.purpose}\n        />\n\n        <div>\n          <button\n            className=\"d-inline mx-2 mt-2 border-0 bg-transparent\"\n            type=\"submit\"\n          >\n            Create\n          </button>\n          <span\n            className=\"d-inline border-0 bg-transparent pointer\"\n            onClick={handleClick}\n          >\n            Cancel\n          </span>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default GroupForm;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport GroupForm from \"../components/GroupForm\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Groups from \"../components/Groups\";\n\nconst GroupEditContainer = (props) => {\n  const [active, setActive] = useState(true);\n  const { history } = props;\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    // if (JSON.stringify(user) === \"{}\") {\n    //   history.push(\"/account\");\n    //   toast.error(\"You Shall Not Pass!\", {\n    //     position: toast.POSITION.TOP_CENTER,\n    //   });\n    // }\n  });\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  return (\n    <div className=\"container text-center mt-5\">\n      <div className=\"heading\">\n        <h2 className=\"d-block my-3\">My Groups</h2>\n        <span>\n          Create and manage your groups. You can invite other gamers to be a\n          member and manage members as well.\n        </span>\n      </div>\n      <ul className=\"nav justify-content-center my-4\">\n        <li className=\"nav-item\">\n          <div\n            className={`nav-link pointer ${active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            My Groups\n          </div>\n        </li>\n        <li className=\"nav-item\">\n          <span\n            className={`nav-link pointer ${!active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            Create a Group\n          </span>\n        </li>\n      </ul>\n      {active ? <Groups groups={user.groups} /> : <GroupForm />}\n    </div>\n  );\n};\n\nexport default GroupEditContainer;\n","import * as actions from \"../actions/user\";\nimport { toast } from 'react-toastify';\n\nconst URL = `${process.env.REACT_APP_URL}/sessions`;\n\n// const displayErrors = (errorsArray) => {\n//   errorsArray.forEach(error => {\n//       toast.error(error, {\n//           position: toast.POSITION.TOP_CENTER\n//       });\n//   });\n// };\n\nconst fetchLogin = (params) => {\n  return async (dispatch) => {\n    \n    dispatch(actions.fetchLoginRequest());\n\n    try {\n      const response = await fetch(URL, {\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify(params),\n      });\n      \n      const result = await response.json();\n      \n      if(!result.error) {\n        toast.success(\"Welcome Back!\", {position: toast.POSITION.TOP_CENTER});\n        return dispatch(actions.fetchLoginSuccess(result));\n      }\n\n      toast.error(result.error, {\n        position: toast.POSITION.TOP_CENTER\n      });\n\n      dispatch(actions.fetchLoginFailure(result.error));\n    \n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport default fetchLogin;\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fetchLogin from \"../async_actions/fetchLogin\";\nimport { NavLink } from 'react-router-dom';\n\nconst Login = (props) => {\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const currentUser = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    if(JSON.stringify(currentUser) !== '{}') props.history.push('/account');\n  });\n\n  const handleChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    // send e.target.innerText to server for OAuth\n  };\n\n  const handleSubmit =  (e) => {\n    e.preventDefault();\n    dispatch(fetchLogin(user));\n    props.history.push('/account')\n  };\n\n  return (\n    <div className=\"container text-center mt-4 signin\">\n        <h2 data-test=\"heading\">Login</h2>\n\n        <div className=\"mt-4\">\n          <button\n            className=\" btn text-center\"\n            name=\"facebook\"\n            data-test=\"button-oauth\"\n          >\n            <FontAwesomeIcon\n              icon={[\"fab\", \"facebook\"]}\n              size=\"lg\"\n              className=\"mr-2\"\n            />\n            <span className=\"mr-2\">Facebook</span>\n          </button>\n        </div>\n        <div className=\"my-2\">\n          <button className=\"btn text-center\" data-test=\"button-oauth\">\n            <FontAwesomeIcon\n              icon={[\"fab\", \"twitter\"]}\n              size=\"lg\"\n              className=\"mr-2\"\n            />\n            <span className=\"mr-4\">Twitter</span>\n          </button>\n        </div>\n        <div className=\"mb-3\">\n          <button className=\" btn text-center\" data-test=\"button-oauth\">\n            <FontAwesomeIcon\n              icon={[\"fab\", \"google\"]}\n              size=\"lg\"\n              className=\"mr-2\"\n            />\n            <span className=\"mr-4\">Google</span>\n          </button>\n        </div>\n        <small>Login account using your email</small>\n        <div className=\"d-flex justify-content-center mt-2\">\n          <form onSubmit={handleSubmit} data-test=\"form-signup\">\n            <div className=\"form-group\">\n              <input\n                className=\"form-control  mt-2\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"email\"\n                onChange={handleChange}\n                value={user.email}\n                required\n              />\n              <input\n                className=\"form-control  mt-2\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                onChange={handleChange}\n                value={user.password}\n                required\n              />\n              <button className=\"btn mt-2\" type=\"submit\">\n                Login\n              </button>\n\n              <small className=\"d-block mt-1\">\n                Don't have an account?{\" \"}\n                <NavLink to=\"/signup\" data-test=\"link\" className=\"d-block\">\n                  Create an account\n                </NavLink>\n              </small>\n            </div>\n          </form>\n        </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import * as actions from '../actions/user';\nimport { toast } from 'react-toastify';\n\nconst URL = `${process.env.REACT_APP_URL}/logout`;\n\nconst fetchLogout = () => {\n    return async (dispatch) => {\n        dispatch(actions.fetchLogoutRequest());\n\n        try {\n            const request = await fetch(URL, {\n                credentials: \"include\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  \"Accept\": \"application/json\",\n                },\n                method: 'DELETE'\n            });\n            toast.success(\"You have logged out\", {position: toast.POSITION.TOP_CENTER});\n            return dispatch(actions.fetchLogoutSuccess());\n        } catch (error) {\n            console.log(error);\n        }\n    } \n}\n\nexport default fetchLogout;","import React, { useState } from 'react'\nimport dice from '../assets/images/dice.svg';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { NavLink , useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fetchLogout from '../async_actions/fetchLogout';\n\n\nconst Heading = () => {\n    const [open, setOpen] = useState(false);\n\n    const currentUser = useSelector((state) => state.user);\n\n\n    const handleClick = () => {\n        setOpen(!open)\n    }\n\n    const dispatch = useDispatch();\n    let history = useHistory();\n    const logout = () => {\n        dispatch(fetchLogout());\n        setOpen(!open)\n        history.push('/');\n    }\n\n    const loginNav = <ul><li onClick={handleClick}>\n                       <NavLink \n                        exact \n                        className=\"nav-link\" \n                        to=\"/login\" \n                        data-test=\"link-navbar\">\n                        Login\n                      </NavLink>\n                    </li>\n                    <li onClick={handleClick}>\n                       <NavLink \n                        exact \n                        className=\"nav-link\" \n                        to=\"/signup\" \n                        data-test=\"link-navbar\">\n                        Signup\n                      </NavLink>\n                    </li>\n                    </ul>\n    return (\n        <div className='logo'>\n            <div className='d-inline'>\n              <img src={dice} />\n            </div>\n\n            <div className='d-inline'>\n              <small className='logo-name'>BoardGame Meetups</small>\n            </div>\n\n            <div className='d-inline pointer' onClick={handleClick} >\n              <span className='user-account-text'>Account</span>\n\n                <FontAwesomeIcon\n                icon={faUser}\n                size=\"lg\"\n                className='user-account-icon'\n                />\n            </div>\n\n            <div className='sidenav' style={open ? {width: '250px'} : {width: '0'}}>\n              <a href=\"#\" className=\"closebtn\" onClick={handleClick} >&times;</a>\n                    {\n                      JSON.stringify(currentUser) === \"{}\" ?\n                      loginNav : \n                      <ul>\n                         <li onClick={handleClick}>\n                           <NavLink \n                            exact \n                            className=\"nav-link\" \n                            to=\"/account\" \n                            data-test=\"link-navbar\">\n                            Account\n                          </NavLink>\n                         </li>\n\n                         <li onClick={handleClick}>\n                           <NavLink \n                            exact \n                            className=\"nav-link\" \n                            to=\"/my-market\" \n                            data-test=\"link-navbar\">\n                            My Market\n                          </NavLink>\n                         </li>\n\n                         <li onClick={handleClick}>\n                           <NavLink \n                            exact \n                            className=\"nav-link\" \n                            to=\"/my-groups\" \n                            data-test=\"link-navbar\">\n                            My Groups\n                          </NavLink>\n                         </li>\n\n                         <li onClick={handleClick}>\n                           <NavLink \n                            exact \n                            className=\"nav-link\" \n                            to=\"/messages\" \n                            data-test=\"link-navbar\">\n                            Messages\n                          </NavLink>\n                         </li>\n\n                         <li>\n                           <NavLink \n                            exact \n                            className=\"nav-link\" \n                            to=\"/invites\" \n                            data-test=\"link-navbar\">\n                            Invites\n                          </NavLink>\n                         </li>\n            \n                         <li onClick={logout}>\n                           <NavLink \n                            exact \n                            className=\"nav-link\" \n                            to=\"/logout\" \n                            data-test=\"link-navbar\">\n                            Logout\n                          </NavLink>\n                         </li>\n                      </ul>\n                    }\n                  <li onClick={handleClick}>\n                   \n                  </li>\n          </div>\n        </div>\n    )\n}\n\nexport default Heading\n","import * as actions from \"../actions/user\";\nconst URL = `${process.env.REACT_APP_URL}/current_user`;\n\nconst fetchCurrentUser = () => {\n  return async (dispatch) => {\n      dispatch(actions.fetchLoginRequest());\n        try {\n          const response = await fetch(URL,{\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n            }\n          });\n            \n          const result = await response.json();\n            \n          if(!result.error) return dispatch(actions.fetchLoginSuccess(result));\n\n          dispatch(actions.fetchLoginFailure(result.error));        \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\n  export default fetchCurrentUser;","import * as actions from \"../actions/users\";\n\nconst URL = `${process.env.REACT_APP_URL}/users`;\n\nconst fetchUsers = () => {\n    return async (dispatch) => {\n        dispatch(actions.fetchUsersRequest());\n\n        try {\n            const response = await fetch(URL, {\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                }\n            });\n\n            const result = await response.json();\n\n            if(!result.errors) return dispatch(actions.fetchUsersSuccess(result));\n\n            dispatch(actions.fetchUsersFailure(result.errors));\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\n\nexport default fetchUsers;","import * as types from \"../constants/users\";\n\nexport const fetchUsersRequest = () => ({\n  type: types.FETCH_USERS_REQUEST,\n});\n\nexport const fetchUsersSuccess = (user) => ({\n  type: types.FETCH_USERS_SUCCESS,\n  payload: user,\n});\n\nexport const fetchUsersFailure = (error) => ({\n  type: types.FETCH_USERS_FAILURE,\n  payload: error,\n});","export const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\";\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\";\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\";\n","import * as actions from '../actions/groups';\n\nconst URL = `${process.env.REACT_APP_URL}/groups`;\n\nconst fetchGroups = () => {\n    return async (dispatch) => {\n        dispatch(actions.fetchGroupsRequest());\n        try {\n            const response = await fetch(URL, {\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\",\n              },\n            });\n\n            const result = await response.json();\n            if(!result.error) return dispatch(actions.fetchGroupsSuccess(result)); \n\n            dispatch(actions.fetchGroupsFailure(result.error));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport default fetchGroups;","import * as types from '../constants/groups'; \n\nexport const fetchGroupsRequest = () => ({\n  type: types.FETCH_GROUPS_REQUEST\n});\n\nexport const fetchGroupsSuccess = (group) => ({\n  type: types.FETCH_GROUPS_SUCCESS,\n  payload: group\n});\n\nexport const fetchGroupsFailure = (error) => ({\n  type: types.FETCH_GROUPS_FAILURE,\n  payload: error\n});","export const FETCH_GROUPS_REQUEST = 'FETCH_GROUPS_REQUEST';\nexport const FETCH_GROUPS_SUCCESS = 'FETCH_GROUPS_SUCCESS';\nexport const FETCH_GROUPS_FAILURE = 'FETCH_GROUPS_FAILURE';","import * as actions from \"../actions/invitation\";\n\nconst fetchInvitations = () => {\n    return async (dispatch) => {\n        dispatch(actions.fetchInvitationsRequest());\n\n        const URL = `${process.env.REACT_APP_URL}/invitations`;\n\n        try {\n            const response = await fetch(URL, {\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                },\n            });\n\n            const result = await response.json();\n\n            if (!result.error) return dispatch(actions.fetchInvitationsSuccess(result));\n\n            dispatch(actions.fetchInvitationsFailure(result.error));\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport default fetchInvitations;","import React, { useState } from 'react'\n\nconst Message = (props) => {\n    const {message} = props;\n    const [show, setShow] = useState(false);\n    const handleClick = () => {\n        setShow(!show);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('AAARGH')\n    }\n\n    return (\n        <div className='mb-4 text-left'>\n           {\n               !show ? <h6 className='pointer message-subjects mb-3' onClick={handleClick}>Subject: {message.subject}</h6> : null\n           } \n            {\n             show ? \n                <div className='message-body'>\n                   <div>From: {message.from}</div>\n                   <div>Subject: {message.subject}</div>\n                   <div className='message-content mt-1'>{message.content}</div> \n                   <form  className='mt-3 d-inline' onSubmit={handleSubmit}>\n                     <button className='btn message-delete-btn'>Delete</button>\n                    </form>\n                    <button className='btn d-inline' onClick={handleClick}>Close</button>\n                </div> : null\n            }\n        </div>\n    )\n}\n\nexport default Message\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Message from './Message';\nimport SentMessage from './SentMessage';  \n\nconst Messages = () => {\n    const [active, setActive] = useState(true);\n    /* The '|| []' will prevent an error when refreshing the page. sentMessages and receivedMessages will be undefined on refresh without it */\n    const sentMessages = useSelector(state => state.user.sent_messages) || [];\n    const receivedMessages = useSelector(state => state.user.received_messages) || [];\n\n    const handleClick = () => {\n        setActive(!active);\n      };\n\n    return (\n        <div className='container messages'>\n          <div className='row'>\n            \n            <div className='col-6 text-justify'>\n                    <div\n                      className={`pointer ${active ? \"message-selection\" : \"\"}`}\n                      onClick={handleClick}\n                    >\n                    Recieved\n                    </div>\n                  <div\n                    className={`pointer mt-2 ${!active ? \"message-selection\" : \"\"}`}\n                    onClick={handleClick}\n                  >\n                    Sent\n                  </div>\n            </div>\n\n            <div className='col-6 mt-2'>\n              {\n                active ? \n               \n                receivedMessages.map((receivedMessage) => <Message key={receivedMessage.id} message=  {receivedMessage} />) :\n                \n                sentMessages.map((sentMessage) => <Message message={sentMessage} />)\n              }\n            </div>\n          </div> \n        </div>\n    )\n}\n\nexport default Messages\n","import * as actions from \"../actions/message\";\nimport { toast } from \"react-toastify\";\n\nconst createMessage = (params, userId) => {\n  return async (dispatch) => {\n    const URL = `${process.env.REACT_APP_URL}/users/${userId}/messages`;\n    dispatch(actions.sentMessageRequest());\n    try {\n      const response = await fetch(URL,{\n        credentials: \"include\",\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        }, \n        body: JSON.stringify(params)\n      });\n        \n      const result = await response.json();\n        \n      if(!result.error) {\n        toast.success(\"Message Sent\", {position: toast.POSITION.TOP_CENTER});\n        return dispatch(actions.sentMessageSuccess(result));\n      }\n\n      dispatch(actions.sentMessageFailure(result.error))\n      toast.error(result.error, {position: toast.POSITION.TOP_CENTER});\n    } catch (error) {\n        console.log(error);\n    }\n  }\n \n    \n}\n\n  export default createMessage;","import * as types from \"../constants/message\";\n\nexport const sentMessageRequest = () => ({\n  type: types.SENT_MESSAGE_REQUEST,\n});\n\nexport const sentMessageSuccess = (sentMessage) => ({\n  type: types.SENT_MESSAGE_SUCCESS,\n  payload: sentMessage,\n});\n\nexport const sentMessageFailure = (error) => ({\n  type: types.SENT_MESSAGE_FAILURE,\n  payload: error,\n});\n\n// export const receivedMessageRequest = () => ({\n//   type: types.RECEIVED_MESSAGE_REQUEST,\n// });\n\nexport const receivedMessageSuccess = (receivedMessage) => ({\n  type: types.RECEIVED_MESSAGE_SUCCESS,\n  payload: receivedMessage,\n});\n\n// export const receivedMessageFailure = (error) => ({\n//   type: types.RECEIVED_MESSAGE_FAILURE,\n//   payload: error,\n// });\n","export const SENT_MESSAGE_REQUEST = \"SENT_MESSAGE_REQUEST\";\nexport const SENT_MESSAGE_SUCCESS = \"SENT_MESSAGE_SUCCESS\";\nexport const SENT_MESSAGE_FAILURE = \"SENT_MESSAGE_FAILURE\";\n// export const RECEIVED_MESSAGE_REQUEST = \"RECEIVED_MESSAGE_REQUEST\";\nexport const RECEIVED_MESSAGE_SUCCESS = \"RECEIVED_MESSAGE_SUCCESS\";\n// export const RECEIVED_MESSAGE_FAILURE = \"RECEIVED_MESSAGE_FAILURE\";","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport createMessage from '../async_actions/createMessage';\n\nconst MessageForm = (props) => {\n    const dispatch = useDispatch();\n\n    const {user} = props\n    const [message, setMessage] = useState({recipient: '', subject: '', content: ''});\n    const handleChange = (e) => {\n        setMessage({...message, [e.target.name]: e.target.value})\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(createMessage(message, user.id));\n        setMessage({\n            recipient: '', \n            subject: '', \n            content: ''\n        });\n    }\n    return (\n        <div>\n          <form className=\"mt-4 mx-lg-auto ml-sm-4\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n            <label className=\"d-block my-2\">Recipient</label>\n            <input\n            name=\"recipient\"\n            onChange={handleChange}\n            type=\"text\"\n            value={message.recipient}\n            />\n             <label className=\"d-block my-2\">Subject</label>\n            <input\n            name=\"subject\"\n            onChange={handleChange}\n            type=\"text\"\n            value={message.subject}\n            />\n            <label className=\"d-block my-2\">Content</label>\n            <textarea\n            name=\"content\"\n            onChange={handleChange}\n            type=\"text-area\"\n            value={message.content}\n            row='3'\n            className='description'\n            />\n            <div>\n            <button\n                className=\"d-inline mx-2 mt-2 border-0 bg-transparent\"\n                type=\"submit\"\n            >\n            Send\n            </button>\n        </div>\n      </div>\n    </form>\n        </div>\n    )\n}\n\nexport default MessageForm\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Messages from \"../components/Messages\";\nimport MessageForm from \"../components/MessageForm\";\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\nconst MessagesContainer = (props) => {\n  const {history} = props\n  const user = useSelector((state) => state.user);\n  const isFetching = useSelector((state) => state.loading.FETCH_EDIT);\n  const [active, setActive] = useState(true);\n\n  useEffect(() => {\n    if (JSON.stringify(user) === \"{}\") props.history.push(\"/login\");\n  });\n\n  const handleClick = () => {\n    setActive(!active);\n  };\n\n  return (\n     <div className=\"container text-center mt-5\">\n       <h1>{props.message}</h1> \n      {isFetching ? (\n        <div className=\"spinner\">\n          <PacmanLoader color={\"#7d3cff\"} />\n        </div>\n      ) : null}\n      <div className=\"heading\">\n        <h2 className=\"d-block my-3\">Messages</h2>\n        <span>View messages other users has sent you and create new messages</span>\n      </div>\n\n      <ul className=\"nav justify-content-center my-4\">\n        <li className=\"nav-item\">\n          <div\n            className={`nav-link pointer ${active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            Messages\n          </div>\n        </li>\n        <li className=\"nav-item\">\n          <span\n            className={`nav-link pointer ${!active ? \"active\" : \"\"}`}\n            onClick={handleClick}\n          >\n            Compose\n          </span>\n        </li>\n      </ul>\n\n      {active ? (\n        <Messages user={user} history={history} />\n      ) : (\n        <MessageForm user={user} history={history}/>\n      )}\n    </div>   \n  );\n};\n\nexport default MessagesContainer;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Signup from \"./components/Signup\";\nimport Account from \"./components/Account\";\nimport Groups from \"./components/Groups\";\nimport Group from \"./components/Group\";\nimport ManageGroupsContainer from \"./containers/ManageGroupsContainer\";\nimport GroupContainer from \"./containers/GroupContainer\";\nimport InvitationsContainer from \"./containers/InvitationsContainer\";\nimport MarketContainer from \"./containers/MarketContainer\";\nimport MarketEditContainer from \"./containers/MarketEditContainer\";\nimport GroupEditContainer from \"./containers/GroupEditContainer\";\nimport Login from \"./components/Login\";\nimport Heading from \"./components/Heading\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as messageActions from './actions/message';\nimport * as invitationActions from './actions/invitation';\nimport fetchCurrentUser from \"./async_actions/fetchCurrentUser\";\nimport fetchUsers from \"./async_actions/fetchUsers\";\nimport fetchGroups from \"./async_actions/fetchGroups\";\nimport fetchInvitations from \"./async_actions/fetchInvitations\";\nimport MessagesContainer from \"./containers/MessagesContainer\";\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\n\nlibrary.add(fab);\n\nconst App = (props) => {\n  const currentUser = useSelector((state) => state.user);\n  const users = useSelector((state) => state.users);\n  const groups = useSelector((state) => state.groups);\n  const invitations = useSelector((state) => state.invitations);\n  const dispatch = useDispatch();\n  const isFetching = useSelector((state) => state.loading.FETCH_LOGIN);\n\n  const handleReceived = (response) => {\n    const { notification, receivedMessage, receivedInvitation } = response;\n    if (receivedMessage) dispatch(messageActions.receivedMessageSuccess(receivedMessage));\n    if (receivedInvitation) dispatch(invitationActions.receivedInvitationSuccess(receivedInvitation));\n    toast.info(notification, { position: toast.POSITION.TOP_CENTER });\n  }\n\n  useEffect(() => {\n    if (JSON.stringify(currentUser) === \"{}\") dispatch(fetchCurrentUser());\n    if (JSON.stringify(users) === \"[]\") dispatch(fetchUsers());\n    if (JSON.stringify(groups) === \"[]\") dispatch(fetchGroups());\n    if (JSON.stringify(invitations) === \"[]\") dispatch(fetchInvitations());\n\n  }, []); // empty array passed as second argument to prevent loop. https://stackoverflow.com/questions/53243203/react-hook-useeffect-runs-continuously-forever-infinite-loop\n\n  return (\n    <div>\n      <Router>\n        <Heading />\n        <Navbar />\n        <ToastContainer />\n        <ActionCableConsumer channel=\"WebNotificationsChannel\" onReceived={handleReceived}>\n          {\n            isFetching ? <div className=\"spinner\">\n              <PacmanLoader color={\"#7d3cff\"} />\n            </div> :\n              <Switch>\n                <Route exact path=\"/\" component={About} />\n                <Route exact path=\"/Home\" component={Home} />\n                <Route exact path=\"/signup\" component={Signup} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route\n                  exact\n                  path=\"/account\"\n                  render={(routeProps) => <Account {...routeProps} />} />\n                <Route\n                  exact\n                  path=\"/groups\"\n                  render={(routeProps) => <GroupContainer {...routeProps} />}\n                />\n                <Route exact path=\"/groups/:id/edit\" component={ManageGroupsContainer} />\n\n                <Route exact path=\"/market\" component={MarketContainer} />\n                <Route exact path=\"/my-market\" component={MarketEditContainer} />\n                <Route exact path=\"/my-groups\" component={GroupEditContainer} />\n                <Route exact path=\"/invites\" component={InvitationsContainer} />\n                <Route exact path=\"/groups/:id\" component={Group} />\n                <Route\n                  exact\n                  path=\"/messages\"\n                  render={(routeProps) =>\n                    <MessagesContainer {...routeProps} />\n                  } />\n              </Switch>\n          }\n\n        </ActionCableConsumer>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const round = (number) => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer = (createStore) => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now();\n    const newState = reducer(state, action);\n    const end = performance.now();\n    const diff = round(end - start);\n\n    console.log(\"reducer process time:\", diff);\n\n    return newState;\n  };\n\n  return createStore(monitoredReducer, initialState, enhancer);\n};\n\nexport default monitorReducerEnhancer;\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.info(\"dispatching\", action);\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","const usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_USERS_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"FETCH_SIGNUP_SUCCESS\": \n      return action.payload;\n    case \"FETCH_LOGIN_SUCCESS\":\n      return action.payload;\n      case \"FETCH_EDIT_SUCCESS\":\n      return action.payload;\n    case \"FETCH_LOGOUT_SUCCESS\":\n      return {};\n    case \"SENT_MESSAGE_SUCCESS\":\n      const updatedSentMessages = [...state.sent_messages, action.payload];\n      return {...state, sent_messages: updatedSentMessages};\n    case \"RECEIVED_MESSAGE_SUCCESS\":\n      const updatedReceivedMessages = [...state.received_messages, action.payload];\n      return {...state, received_messages: updatedReceivedMessages};\n    case \"CREATE_GROUP_SUCCESS\": \n      const updatedCreatedGroup = [...state.groups, action.payload];\n      return {...state, groups: updatedCreatedGroup};  \n    case \"EDIT_GROUP_SUCCESS\": \n      const updatedGroups = state.groups.map(group => \n        group.id === action.payload.id ? \n        action.payload : \n        group\n      ) \n      return {...state, groups: updatedGroups};\n    case \"ACCEPT_INVITATION_SUCCESS\": \n       const addedGroups = [...state.groups, action.payload.group]\n        return {...state, groups: addedGroups}\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","const { bindActionCreators } = require(\"redux\");\n\nconst groupsReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"FETCH_GROUPS_SUCCESS\": \n          return action.payload\n        case \"CREATE_GROUP_SUCCESS\": \n          return [...state, action.payload];\n        case \"EDIT_GROUP_SUCCESS\": \n          return state.map(group => \n            group.id === action.payload.id ? \n            action.payload : \n            group\n          );\n        case \"ACCEPT_INVITATION_SUCCESS\": \n          return state.map((group) => \n            group.id === action.payload.group.id ? \n            action.payload.group : \n            group\n          );\n        default: \n          return state\n    }\n}\n\nexport default groupsReducer","const loadingReducer = (state = {}, action) => {\n    const { type } = action;\n    const matches = /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(type);\n    \n    if (!matches) return state;  \n    \n    const [, requestName, requestState] = matches;\n    return {\n      ...state,\n      [requestName]: requestState === 'REQUEST',\n    };\n  };\n\n  export default loadingReducer;\n \n  /* \n    Link to article for this loading/error reducer pattern \n\n    https://medium.com/stashaway-engineering/react-redux-tips-better-way-to-handle-loading-flags-in-your-reducers-afda42a804c6\n  */","const errorReducer = (state = {}, action) => {\n    const { type, payload } = action;\n    const matches = /(.*)_(REQUEST|FAILURE)/.exec(type);\n  \n    if (!matches) return state;\n    const [, requestName, requestState] = matches;\n    return {\n      ...state,\n      [requestName]: requestState === 'FAILURE' ? payload : '',\n    };\n  };\n\n  export default errorReducer;\n\n    /* \n    Link to article for this loading/error reducer pattern \n\n    https://medium.com/stashaway-engineering/react-redux-tips-better-way-to-handle-loading-flags-in-your-reducers-afda42a804c6\n  */","const invitationsReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"FETCH_INVITATIONS_SUCCESS\": \n            return action.payload\n        case \"RECEIVED_INVITATION_SUCCESS\": \n            return [...state, action.payload] \n        case \"ACCEPT_INVITATION_SUCCESS\": \n            return state.filter((invitation) => invitation.id !== action.payload.invitation);\n        default: \n            return state\n    }\n}\n\nexport default invitationsReducer","import { combineReducers } from \"redux\";\nimport usersReducer from \"./usersReducer\";\nimport userReducer from \"./userReducer\";\nimport groupsReducer from \"./groupsReducer\";\nimport loadingReducer from './loadingReducer';\nimport errorReducer from './errorReducer';\nimport invitationsReducer from './invitationsReducer';\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  user: userReducer,\n  groups: groupsReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n  invitations: invitationsReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./configureStore\";\nimport { ActionCableProvider } from 'react-actioncable-provider';\n\n\nconst store = configureStore();\n\nconst renderApp = () =>\n  render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <ActionCableProvider url=\"ws://localhost:3000/cable\">\n          <App />\n        </ActionCableProvider>\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n\nif (process.env.NODE_ENV !== \"production\" && module.hot) {\n  module.hot.accept(\"./App\", renderApp);\n}\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport monitorReducersEnhancer from \"./enhancers/monitorReducer\";\nimport loggerMiddleware from \"./middleware/logger\";\nimport rootReducer from \"./reducers\";\n\nconst configureStore = (preloadedState) => {\n  const middlewares = [loggerMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\n    module.hot.accept(\"./reducers\", () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n};\n\nexport default configureStore;\n"],"sourceRoot":""}