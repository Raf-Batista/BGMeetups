version: "3.7"
services:
  db:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: "redis:alpine"
    command: redis-server --requirepass CHANGE_THIS_PASSWORD!
    ports:
      - "6378:6378"
    volumes:
      - ./tmp/redis:/var/lib/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      node_net:
        ipv4_address: 172.28.1.4
  server:
    container_name: rails
    build:
      context: ./bg-meetups-back-end
    environment:
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DATABASE: bg_meetups_back_end_development
      PG_PORT: 5432
      PG_HOST: db
      REDIS_DB: 0
      REDIS_PORT: 6379
      REDIS_URL: redis://172.28.1.4
      SENTINEL_URL: redis://sentinel-master/1
      SENTINEL_HOSTS: sentinel-slave-1 sentinel-slave-2 sentinel-slave-3
      SENTINEL_PORT: 26379
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./bg-meetups-back-end:/app
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true 
    depends_on:
      - db
  client:
    container_name: react
    build:
      context: ./bg-meetups-front-end
    volumes:
      - ./bg-meetups-front-end:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENVIRONMENT=development
      - REACT_APP_URL=http://localhost:3000
    stdin_open: true
    tty: true
    depends_on:
      - server
networks:
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
